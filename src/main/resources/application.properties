# Configuration de la base de donnees H2
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url= jdbc:h2:mem:default;DB_CLOSE_DELAY=-1
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql

# Configuration des ports et du CORS pour la prod et le dev
quarkus.http.port=8887
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.cors.exposed-headers=Content-Disposition

#Config de swagger
quarkus.swagger-ui.theme=original

keycloak.url=${KEYCLOAK_URL:http://localhost:8080}

#Config securit√© backend
quarkus.oidc.auth-server-url=${KEYCLOAK_URL:http://localhost:8080}/realms/bridgemonitor-realm
quarkus.oidc.client-id=bridgemonitor-backend
quarkus.oidc.credentials.secret=PR2JufsdFwH58STeMCmHKlHpyMgMYWWk

quarkus.http.host=0.0.0.0

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url= jdbc:h2:mem:test;DB_CLOSE_DELAY=-1
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.sql-load-script=import-test.sql
%test.quarkus.oidc.auth-server-url=${KEYCLOAK_URL:http://localhost:8080}/realms/bridgemonitor-realm
%test.quarkus.oidc.client-id=bridgemonitor-backend


# quarkus.datasource.db-kind=postgresql
# quarkus.datasource.username=user
# quarkus.datasource.password=password
# quarkus.datasource.jdbc.url= jdbc:postgresql://localhost:5432/my_db
# quarkus.hibernate-orm.database.generation=drop-and-create

#Creation du db
#sudo  docker run -d --rm --name my_reative_db -e POSTGRES_USER=user -e POSTGRES_PASSWORD=password -e POSTGRES_DB=my_db -p 5432:5432 postgres:10.5